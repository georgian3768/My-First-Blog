//  Install python
//  make dir for proj <djangogirls>
//  create virtual environment in proj dir <venv1> (python -m venv venv1)
//  Start Virtual Envt (venv1\Scripts\activate)
//  Install django Framework
        ->  Update pip (python -m pip install --upgrade pip )
        ->  Create Requitements.txt with Django virsion in it (Django~=3.2.10)
        ->  Install Django (pip install -r Requirements.txt)
//  Create Django Project in Virtual Envt (django-admin.exe startproject <mysite> .)
//  Configure Settings of Project <mysite> (Edit settings.py)
        ->  Timezone (TIME_ZONE)
        ->  Language (LANGUAGE_CODE)
        ->  Static root (STATIC_ROOT = BASE_DIR/'static')
        ->  Allowed hosts (ALLOWED_HOSTS = ['127.0.0.1','.pythonanywhere.com'])
//  Create Database in base_dir (python manage.py migrate)
//  Start Webserver (python manage.py runserver)
        ->  While Webserver us active terminal cannot be used to enter commands
        ->  Use new terminal to execute commamds
        ->  Use (Ctrl+Break) to stop Webserver
//  Check Webserver (127.0.0.01:8000 on Browser)
//  Create a separate appliacation inside project <blog> (python manage.py startapp blog)
//  Add application <blog> to list of installed apps so that Django knows that it exists 
        ->  Open settings.py
        ->  INSTALLED_APPS = [... , 'blog',]
//  Create a blog post model (Create class <post> in blog/models.py)
//  Create table for model <post> in DB 
        ->  python manage.py makemigrations blog
        ->  python manage.py migrate blog
//  Register model <post> with Django Admin (Edit blog/admin.py)
        ->      admin.register.site(Post)
//  Start WebServer (python manage.py runserver)
//  Create superuser in terminal (python manage.py createsuperuser)
//  login to django using superuser credentials (127.0.0.1:8000/admin)
//  add some blog posts{objects}
//  Deploy on internet (pythonanywhere.com)
        ->   Install Git
        ->   Configure Git Repository
                ->  $ git init (in base dir)
                ->  $ git config --global user.name "Your Name"      <admin>
                ->  $ git config --global user.email you@example.com <georgian3768@gmail.com>
        ->  Create .gitignore and add files to ignore (to ignore files)
        ->  add files to repository
                ->  $ git add . (current_dir)
                ->  $ git commit -m "<first commit>"
        ->  Push Your code to github
                ->  create a new repo on github
                ->  Push your repo to Github repo
        ->  Setup project on pythonanywhere.com
                ->  Sign up for a PythonAnywhere account
                ->  Create a PythonAnywhere API token
                ->  Configure our site on PythonAnywhere
                        ->  start a "Bash" console (From Dashboard) // Deploying a web app on PythonAnywhere involves pulling down your code from GitHub, and then configuring PythonAnywhere to recognise it and start serving it as a web application.
                        ->  Install pythonanywhere ($ pip3.8 install --user pythonanywhere)
                        ->  Configure your app from GitHub ($ pa_autoconfigure_django.py --python=3.8 https://github.com/<your-github-username>/<my-first-blog.git>)
                        ->  Create SuperUser (db.sqlite is not copied due .gitignore) ($ python manage.py createsuperuser)
//  Configure URLs for you site (mysite)
        ->  Edit mysite/urls.py
        ->  Import include from django.urls
        ->  Add blog.urls in urlpatterns[] using include() function
//  Configure URLs for you app (blog)
        ->  Create blog/urls.py
        ->  Import path from django.urls anf views from current_dir(.)
        ->  Add path to a view <post_list> into urlpattern[] (path('', views.post_list, name = 'post_list')) 